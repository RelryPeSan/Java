package core.preparacao;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.Component;
import javax.swing.ImageIcon;
import javax.swing.JPanel;

/**
 *
 * @author CMU
 */
public class PanelNavioPreparacao extends javax.swing.JPanel {

    int sizeImage = 40;
    private final int porteNavio;
    private int direction = 0;
    javax.swing.border.LineBorder bordaAzul = new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 255), 2, true);
    static javax.swing.border.LineBorder bordaVerde = new javax.swing.border.LineBorder(new java.awt.Color(0, 255, 0), 2, true);

    private boolean emCampo = false;
    private boolean currentSelect = false;

    /**
     * Creates new form PanelNavioStatus
     *
     * @param porteNavio
     */
    public PanelNavioPreparacao(int porteNavio) {
        initComponents();
        this.porteNavio = porteNavio;
        initConfig();
    }

    public PanelNavioPreparacao(int porteNavio, int sizeImage) {
        initComponents();
        this.porteNavio = porteNavio;
        this.sizeImage = sizeImage;
        initConfig();
    }

    public void initConfig() {

        // cria o Label que armazena a imagem do navio
        javax.swing.JLabel lblIconNavio = new javax.swing.JLabel();

        // seleciona a imagem/tamanho do navio com o parametro passado no construtor
        ImageIcon icon = null;
        switch (porteNavio) {
            case 1:
                icon = new ImageIcon(getClass().getResource("/img/embarcacoes/submarino.png"));
                break;

            case 2:
                icon = new ImageIcon(getClass().getResource("/img/embarcacoes/navio_2.png"));
                break;

            case 3:
                icon = new ImageIcon(getClass().getResource("/img/embarcacoes/navio_3.png"));
                break;

            case 4:
                icon = new ImageIcon(getClass().getResource("/img/embarcacoes/navio_4.png"));
                break;

            case 5:
                icon = new ImageIcon(getClass().getResource("/img/embarcacoes/navio_5.png"));
                break;
        }
        icon.setImage(icon.getImage().getScaledInstance(sizeImage * porteNavio, sizeImage, 100));
        lblIconNavio.setIcon(icon);
        lblIconNavio.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        add(lblIconNavio, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, sizeImage == 40 ? 200 : 100, sizeImage));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblRotate = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setOpaque(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblRotate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/arrow_rotate.png"))); // NOI18N
        lblRotate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblRotate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblRotateMousePressed(evt);
            }
        });
        add(lblRotate, new org.netbeans.lib.awtextra.AbsoluteConstraints(184, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // Limpa todas as bordas, exceto as dos navios já em campo
        for (Component p : ((JPanel) getParent()).getComponents()) {
            if (!((PanelNavioPreparacao) p).emCampo) {
                ((PanelNavioPreparacao) p).setBorder(null);
            }
            ((PanelNavioPreparacao) p).setCurrentSelect(false);
        }

        // Seta este panelNavio com borda de seleção
        currentSelect = true;
        setBorder(bordaAzul);
    }//GEN-LAST:event_formMousePressed

    private void lblRotateMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRotateMousePressed
        direction = (direction == 0) ? 1 : 0;
    }//GEN-LAST:event_lblRotateMousePressed

    public int getPorteNavio() {
        return porteNavio;
    }

    public int getDirection() {
        return direction;
    }

    public void setEmCampo(boolean b){
        emCampo = b;
    }
    
    public boolean isEmCampo() {
        return emCampo;
    }
    
    public boolean isCurrentSelect() {
        return currentSelect;
    }

    public void setCurrentSelect(boolean currentSelect) {
        this.currentSelect = currentSelect;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblRotate;
    // End of variables declaration//GEN-END:variables
    
}
